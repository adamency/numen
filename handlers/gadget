#!/bin/sh
export NUMEN_HANDLER=gadget

alias print='printf %s\\n'
alias shell='${NUMEN_SHELL:-/bin/sh}'

# Returns whether $1 starts with $2.
prefixed() { [ "${1#$2}" != "$1" ]; }

export NUMEN_KEY_DELAY="${NUMEN_KEY_DELAY:-2}"
export NUMEN_KEY_HOLD="${NUMEN_KEY_HOLD:-8}"
export NUMEN_TYPE_DELAY="${NUMEN_TYPE_DELAY:-2}"
export NUMEN_TYPE_HOLD="${NUMEN_TYPE_HOLD:-8}"
mygadget() {
	{
		print "keydelay $NUMEN_KEY_DELAY"
		print "keyhold $NUMEN_KEY_HOLD"
		print "typedelay $NUMEN_TYPE_DELAY"
		print "typehold $NUMEN_TYPE_HOLD"
		cat
	} | gadget
}

if ! command -v gadget >/dev/null; then
	echo 'numen: the gadget handler requires the gadget command:
    https://git.sr.ht/~geb/gadget' >&2
	exit 1
elif ! gadget ready; then
	echo 'numen: you first need to run: gadget init' >&2
	exit 1
fi

unset caps
while IFS= read -r line; do
	if prefixed "$line" key; then
		print "$line" | sed 's/[ +]/&x:/g; s/x:\([a-z]*+\)/\1/g'
	elif prefixed "$line" type; then
		export NUMEN_TEXT="${line#type }"
		print "$line"
	elif [ "$line" = capson ]; then
		! [ "$caps" ] && caps=1 && echo 'key capslock'
	elif [ "$line" = capsoff ]; then
		[ "$caps" ] && unset caps && echo 'key capslock'
	elif [ "$line" = scrollup ]; then
		print 'scroll -1'
	elif [ "$line" = scrolldown ]; then
		print 'scroll 1'
	elif prefixed "$line" pen; then
		export NUMEN_TEXT="$(shell -c "${line#pen }")"
		print "$NUMEN_TEXT" | sed 's/^/type /; 1 !s/^/key Return\n/' | gadget send
	elif prefixed "$line" localpen; then
		export NUMEN_TEXT="$(shell -c "${line#localpen }")"
		print "$NUMEN_TEXT" | sed 's/^/type /; 1 !s/^/key Return\n/'
	elif prefixed "$line" eval; then
		print "$line" | gadget send
	elif prefixed "$line" localeval; then
		shell -c "${line#localeval }" > "$NUMEN_PIPE"
	elif prefixed "$line" set; then
		line="${line#set }"
		value="$(shell -c "${line#* }")"
		if [ "${line%% *}" = NUMEN_KEY_DELAY ]; then
			print "keydelay $value"
		elif [ "${line%% *}" = NUMEN_KEY_HOLD ]; then
			print "keyhold $value"
		elif [ "${line%% *}" = NUMEN_TYPE_DELAY ]; then
			print "typedelay $value"
		elif [ "${line%% *}" = NUMEN_TYPE_HOLD ]; then
			print "typehold $value"
		fi
		export -- "${line%% *}=$value"
	elif prefixed "$line" handler; then
		exec "/usr/libexec/numen/handlers/${line#handler }"
	else
		print "$line"
	fi
done | mygadget

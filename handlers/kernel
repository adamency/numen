#!/bin/sh
# ./handlers/kernel PIPE
export NUMEN_HANDLER=kernel

alias print='printf %s\\n'
alias shell='${NUMEN_SHELL:-/bin/sh}'

# Returns whether $1 starts with $2.
prefixed() { [ "${1#$2}" != "$1" ]; }

alias dotool='{ print "keydelay 8" "typedelay 4"; cat; } | dotool'

unset caps
while IFS= read -r line; do
	line="${line#local}"
	if prefixed "$line" key; then
		print "$line" | sed 's/[ +]/&x:/g; s/x:\([a-z]*+\)/\1/g'
	elif prefixed "$line" type; then
		export NUMEN_TEXT="${line#type }"
		print "$line"
	elif [ "$line" = capson ]; then
		[ "$caps" ] || print "key capslock"
		caps=1
	elif [ "$line" = capsoff ]; then
		[ "$caps" ] && print "key capslock"
		unset caps
	elif [ "$line" = scrollup ]; then
		print 'scroll -1'
	elif [ "$line" = scrolldown ]; then
		print 'scroll 1'
	elif prefixed "$line" pen; then
		export NUMEN_TEXT="$(shell -c "${line#pen }")"
		print "$NUMEN_TEXT" | sed 's/^/type /; 1 !s/^/key Return\n/'
	elif prefixed "$line" eval; then
		shell -c "${line#eval }" > "$1"
	elif prefixed "$line" set; then
		line="${line#set }"
		value="$(shell -c "${line#* }")"
		if [ "${line%% *}" = NUMEN_KEY_DELAY ]; then
			print "keydelay $value"
		elif [ "${line%% *}" = NUMEN_TYPE_DELAY ]; then
			print "typedelay $value"
		fi
		export -- "${line%% *}=$value"
	elif prefixed "$line" handler; then
		exec "handlers/${line#handler }"
	else
		print "$line"
	fi
done | if ! dotool; then
	if ! : | dotool 2> /dev/null; then
		echo 'numen: Failed to create the input device, you might not have the permissions.
Make sure you are in group input (see: id -Gn) and run: sudo udevadm trigger
The command reloads the udev rule installed with numen, alternatively you can reboot.

If you are not in group input, you can add yourself by running:

	sudo usermod -a -G input $USER

and then re-login.
' >&2
	fi
fi
